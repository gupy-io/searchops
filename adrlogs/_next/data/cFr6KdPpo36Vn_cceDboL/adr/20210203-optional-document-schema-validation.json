{"pageProps":{"projectName":"searchops","currentAdr":{"slug":"20210203-optional-document-schema-validation","package":null,"title":"Optional document schema validation","status":"draft","supersededBy":null,"tags":["validation","mappings"],"deciders":[],"body":{"enhancedMdx":"\n## Context and Problem Statement\n\nSearchops versions <0.0.4 used Ajv version 6.x to validate the incoming document\nbefore sending it to Elasticsearch on index requests. The conversion Mapping ->\nJSON Schema -> Validator would happen in the constructor for every client\ninstantiation. This was not optimal but not significant as Ajv 6.x would cache\ncompiled schemas.\n\nThe feature exists in order to protect the client from sending index requests of\ndocuments containing invalid data. In the early days of adopting Elasticsearch,\nmost indexes wouldn't have strict mappings, which could be dangerous. Validation\nwould help users prevent sending new data serialized in ways that Elasticsearch\ndynamic mapping would find ambiguous, e.g. failing to interpret a string as\nDate.\n\nVersion 0.0.4 of searchops upgraded Ajv to 7.x, which [introduced a change][ajv]\nin schema caching so that the schema object reference would be used as cache key\ndirectly instead of using the serialization of the schema as 6.x did previously.\nThis introduced a significant performance issue since the JSON Schema was\ngenerated in a new reference at every class instantiation even if the mapping\nstayed unchanged.\n\n[ajv]: https://github.com/ajv-validator/ajv/releases/tag/v7.0.0\n\n## Decision Drivers\n\n1. [You Aren't Gonna Need It][yagni]\n2. [Principle of Least Astonishment][pola]\n\n[yagni]: https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it\n[pola]: https://en.wikipedia.org/wiki/Principle_of_least_astonishment\n\n## Considered Options\n\nA) Regarding the performance problem:\n\n1. Cache schema objects ourselves\n2. Use Ajv 6.x indefinitely\n3. Change to a different library\n\nB) Regarding the validation feature:\n\n1. Make validation opt-in\n2. Remove the validation feature\n\n\n## Decision Outcome\n\nChosen option: **cache schema objects ourselves AND make validation opt-in**.\n\n### Positive Consequences\n\n- Validation is still available\n- Validation cost is paid only by those who need it\n- Schema compilation cost stays amortized\n- Default behavior is intuitive\n\n### Negative Consequences\n\n- More opt-in features means more complexity\n- Default behavior is less safe\n\n## Pros and Cons of the Options\n\n### A1: Cache schema objects ourselves\n\nPros:\n\n- Keeps dependency up to date\n\nCons:\n\n- More code to maintain\n\n### A2: Use Ajv 6.x indefinitely\n\nPros:\n\n- Less code to maintain\n\nCons:\n\n- Stale dependency\n\n### A3: Change to a different library\n\nA library that behaves like Ajv 6.x did, caching by serialized schema.\n\nPros:\n\n- Less code to maintain\n- Keeps dependency up to date\n\nCons:\n\n- No suitable alternative found\n\n### B1: Make validation opt-in\n\nPros:\n\n- The performance cost is paid only by those who chose to (+POLA)\n\nCons:\n\n- Default behavior is not the safest\n\n### B2: Remove the validation feature\n\nPros:\n\n- Less code to maintain (+YAGNI)\n\nCons:\n\n- A helpful-proven feature would be gone\n\n## Links <!-- optional -->\n\n- [GitHub Issue #163: Upgrade to Ajv 7.x introduced critical performance issue][issue]\n\n[issue]: (https://github.com/gupy-io/searchops/issues/163)\n"},"creationDate":"2021-02-04T20:55:10.000Z","lastEditDate":"2021-02-04T20:55:10.000Z","lastEditAuthor":"Victor Villas","publicationDate":"2021-02-04T02:59:59.000Z","file":{"relativePath":"docs/adr/20210203-optional-document-schema-validation.md","absolutePath":"/home/runner/work/searchops/searchops/docs/adr/20210203-optional-document-schema-validation.md"},"repository":{"provider":"github","viewUrl":"https://github.com/gupy-io/searchops/blob/master/docs/adr/20210203-optional-document-schema-validation.md"}},"l4bVersion":"1.0.0-beta.8"},"__N_SSG":true}