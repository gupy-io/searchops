{"pageProps":{"projectName":"searchops","adrs":[{"slug":"20210203-document-schema-validation-from-mappings","package":null,"title":"Document schema validation from mappings","status":"draft","creationDate":"2021-02-03T22:53:19.000Z","publicationDate":null}],"markdown":"# Architecture Decision History\n\nWelcome üëã to the architecture decision history of `searchops`. You will find\nhere all the Architecture Decision Records (ADRs) of the project.\n\nYou can browse the ADRs by using the left menu or the search bar.\n\n## Definition and Purpose\n\nAn Architectural Decision (AD) is a software design choice that addresses a\nrequirement that is architecturally significant. An Architectural Decision\nRecord (ADR) is a document that captures a single AD. The collection of ADRs\ncreated and maintained in a project constitutes its decision history.\n\nThe typical workflow of an ADR is the following:\n\n![ADR workflow](/l4b-static/adr-workflow.png)\n\nAfter leaving draft status, an ADR is immutable (only its status can change).\nThat way, you can become familiar with the whole project history just by reading\nits decision history in chronological order.\n\nMaintaining this documentation aims at:\n\n- ü§ù Formalizing the decision process of the team\n- üî≠ Avoiding blind acceptance/reversal of a past decisions\n- üöÄ Improving and speeding up the onboarding of a new team member\n\n## More information\n\n- [What is an ADR and why should you use them](https://www.thoughtworks.com/de/radar/techniques/lightweight-architecture-decision-records)\n- [Where do they come from and how is it used](https://cognitect.com/blog/2011/11/15/documenting-architecture-decisions.html)\n- [Markdown Architecture Decision Records](https://adr.github.io/)\n\nThis website is automatically generated from the Markdown ADR files in the\n`main` branch of the project's [repository][repo].\n\n[repo]: https://github.com/gupy-io/searchops/tree/main/docs/adr\n","l4bVersion":"1.0.0-beta.8"},"__N_SSG":true}